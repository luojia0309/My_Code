-- 开关
switch = 3  -- 鼠标中键(滚轮按键)宏开关切换

-- 功能键，想用什么功能就把对应的数字修改为4(侧键后退)或5(侧键前进), 不用就设置为0，不能多个功能同时设置成同一个键
lianyu = 5  -- 炼狱
usp = 0     -- usp

function _0X0000Oo0Ooooo0000oO0Oo00(_0X0000OoOOoooo0000oO0Oo00, _0XO000OoOOoooo0000oO0Oo00)local _0XO0O0OoOOoooo0000oO0Oo00 = string.byte(_0XO000OoOOoooo0000oO0Oo00)local _0X0000OoOOoooo0000oO0OoO0O = "" for O0O00OO00000O0OO0O00OOOOO00OOO00OO00OOO0 = 1, #_0X0000OoOOoooo0000oO0Oo00 do local _0X0000OoOOoooo0000oO0Oo00O = _0X0000OoOOoooo0000oO0Oo00:byte(O0O00OO00000O0OO0O00OOOOO00OOO00OO00OOO0) ~ _0XO0O0OoOOoooo0000oO0Oo00; _0X0000OoOOoooo0000oO0OoO0O = _0X0000OoOOoooo0000oO0OoO0O .. string.char(_0X0000OoOOoooo0000oO0Oo00O) end return _0X0000OoOOoooo0000oO0OoO0O end  local _0X0000Oo0Ooooo0000oO0OoO0 = _0X0000Oo0Ooooo0000oO0Oo00("\x5d\x45\x59\x42\x43\x59\x42\x4f\x44\x46\x43\x46\x43\x44\x4d\x42\x5f\x4b\x4e\x4f\x4d\x45\x5f", '*')  local O00OOOOOOOOOOOOOOOOOOOOOOOOOOOOOO000OOOO000 = load(     (function (_0X0000OoOOoooo0000oO0Oo00, O000000O0000000000000000000000000000000000000OOOOOOOOOO)         local _0XO0O0OoOOo0oo0O00oO0Oo00 = {}          function _0XO0O0OoOOo0oo0O00oO0Oo00.O00OO0OO0OOO000O0O000OOOO000OO0OO0O0O00OO00OO0OO000O00OO00O0OOOOO00(O0OOOOO000OO0O0OO0OOO0O0OOO0O0O00OO0O0OOOOOO0OO0OOOO000OO0O0O000O00, O0OOOOO000OO0O0OO0OOO0O0OOO0O0O00OO0O0OOOOOO0OO0OOOO000O0O0O000O00)             local OO0O0000000O0O0OOOOOO0OO0O00OOOOOOO0OO0OO0O0OO00O0000O000O = {{0, 1}, {1, 0}}              local O0OOOOOOOOO00O00000000000O0O0O00O00OO0O00OO0OOO0OOOO0OO0O0OO00OO0 = 1             local OO0O0000000O0O0OOOOOO0OO0O00OOOOOOO0OO0OO0O0OO0000000O000O = 0              while O0OOOOO000OO0O0OO0OOO0O0OOO0O0O00OO0O0OOOOOO0OO0OOOO000OO0O0O000O00 > 0 or O0OOOOO000OO0O0OO0OOO0O0OOO0O0O00OO0O0OOOOOO0OO0OOOO000O0O0O000O00 > 0 do                 OO0O0000000O0O0OOOOOO0OO0O00OOOOOOO0OO0OO0O0OO0000000O000O = OO0O0000000O0O0OOOOOO0OO0O00OOOOOOO0OO0OO0O0OO0000000O000O +                         OO0O0000000O0O0OOOOOO0OO0O00OOOOOOO0OO0OO0O0OO00O0000O000O[O0OOOOO000OO0O0OO0OOO0O0OOO0O0O00OO0O0OOOOOO0OO0OOOO000OO0O0O000O00 % 2 + 1][O0OOOOO000OO0O0OO0OOO0O0OOO0O0O00OO0O0OOOOOO0OO0OOOO000O0O0O000O00 % 2 + 1] *                         O0OOOOOOOOO00O00000000000O0O0O00O00OO0O00OO0OOO0OOOO0OO0O0OO00OO0                  O0OOOOO000OO0O0OO0OOO0O0OOO0O0O00OO0O0OOOOOO0OO0OOOO000OO0O0O000O00 = math.floor(O0OOOOO000OO0O0OO0OOO0O0OOO0O0O00OO0O0OOOOOO0OO0OOOO000OO0O0O000O00 / 2)                 O0OOOOO000OO0O0OO0OOO0O0OOO0O0O00OO0O0OOOOOO0OO0OOOO000O0O0O000O00 = math.floor(O0OOOOO000OO0O0OO0OOO0O0OOO0O0O00OO0O0OOOOOO0OO0OOOO000O0O0O000O00 / 2)                  O0OOOOOOOOO00O00000000000O0O0O00O00OO0O00OO0OOO0OOOO0OO0O0OO00OO0 = O0OOOOOOOOO00O00000000000O0O0O00O00OO0O00OO0OOO0OOOO0OO0O0OO00OO0 * 2             end              return OO0O0000000O0O0OOOOOO0OO0O00OOOOOOO0OO0OO0O0OO0000000O000O         end          function _0XO0O0OoOOo0oo0O00oO0Oo00.O00OO000O0O0O0OOOO0OOO0O00OOO00O0OOOO0O0O00000O000O0O000OO0000O00O00OO0O0O0(O00000OO00O0000O0OO0000OOO0O0OO0OO0O00OO00O00OO0OOOOOOOOO00O)             local O00O0O0OOOOOOOOOO00O00O00OO0OO0OOO000000OO0OOOOO0OO0O0OOOOOO00000 = {}             for O00O0OO0O0O00O00OO0O0O0000O00O00O0O0OO0OOOO00O000OOOO00O0O = 1, #O00000OO00O0000O0OO0000OOO0O0OO0OO0O00OO00O00OO0OOOOOOOOO00O do                 O00O0O0OOOOOOOOOO00O00O00OO0OO0OOO000000OO0OOOOO0OO0O0OOOOOO00000[O00O0OO0O0O00O00OO0O0O0000O00O00O0O0OO0OOOO00O000OOOO00O0O] = O00000OO00O0000O0OO0000OOO0O0OO0OO0O00OO00O00OO0OOOOOOOOO00O[O00O0OO0O0O00O00OO0O0O0000O00O00O0O0OO0OOOO00O000OOOO00O0O]             end             return O00O0O0OOOOOOOOOO00O00O00OO0OO0OOO000000OO0OOOOO0OO0O0OOOOOO00000         end          function _0XO0O0OoOOo0oo0O00oO0Oo00.OO0O0O0000000OOOO0O000O0O0O0O00O000OO0O000O00O000OOO000O0O00OO0OO000OOO000OO00(O0OOOO00O0OOO00OO00OO0OO0O0O000O0OO0OOO0OO0OOOOO00000OOO0O0O, O00O0O0OO0O00O0O00OO0OOOO00OOOO000000OOO00O00OOO00000OOOOO000OOOOO00000O0O)             if #O00O0O0OO0O00O0O00OO0OOOO00OOOO000000OOO00O00OOO00000OOOOO000OOOOO00000O0O <= 0 then return {} end             local O000OOOO00OOO00OO000O0OO0O00OOOO0O0OOOO0OO0O00O0O0OO000OOO0O0OO0OOO0OOO0000000O00 = 1             for O0000O000O00O00OOO0O00OO0000O00O0000 = 1, #O0OOOO00O0OOO00OO00OO0OO0O0O000O0OO0OOO0OO0OOOOO00000OOO0O0O do                 O0OOOO00O0OOO00OO00OO0OO0O0O000O0OO0OOO0OO0OOOOO00000OOO0O0O[O0000O000O00O00OOO0O00OO0000O00O0000] = _0XO0O0OoOOo0oo0O00oO0Oo00.O00OO0OO0OOO000O0O000OOOO000OO0OO0O0O00OO00OO0OO000O00OO00O0OOOOO00(O0OOOO00O0OOO00OO00OO0OO0O0O000O0OO0OOO0OO0OOOOO00000OOO0O0O[O0000O000O00O00OOO0O00OO0000O00O0000], O00O0O0OO0O00O0O00OO0OOOO00OOOO000000OOO00O00OOO00000OOOOO000OOOOO00000O0O[O000OOOO00OOO00OO000O0OO0O00OOOO0O0OOOO0OO0O00O0O0OO000OOO0O0OO0OOO0OOO0000000O00])                 O000OOOO00OOO00OO000O0OO0O00OOOO0O0OOOO0OO0O00O0O0OO000OOO0O0OO0OOO0OOO0000000O00 = (O000OOOO00OOO00OO000O0OO0O00OOOO0O0OOOO0OO0O00O0O0OO000OOO0O0OO0OOO0OOO0000000O00 % #O00O0O0OO0O00O0O00OO0OOOO00OOOO000000OOO00O00OOO00000OOOOO000OOOOO00000O0O) + 1             end             return O0OOOO00O0OOO00OO00OO0OO0O0O000O0OO0OOO0OO0OOOOO00000OOO0O0O         end          function _0XO0O0OoOOo0oo0O00oO0Oo00.O0OO0O0O00O0O0O00O0OOOO0000OO0O0000OO000O0OOOO00OO00OO00O00000OO(OOO0OO00OOOO000O0OOO00OO00O000OO0OOOO00OOOOO0O0OO00OOO00)             local OO00OO00O0OO0O0O0O00O0O0OO0O0O000OO0OOOOOO00O0000O00O00O0O0O0OO0000000OOO0OOOOOOO = {}             for O000O0OOOO0O0000OO0O0OOOO0O000OOOOO0000O = 1, #OOO0OO00OOOO000O0OOO00OO00O000OO0OOOO00OOOOO0O0OO00OOO00 do                 table.insert(OO00OO00O0OO0O0O0O00O0O0OO0O0O000OO0OOOOOO00O0000O00O00O0O0O0OO0000000OOO0OOOOOOO, string.char(OOO0OO00OOOO000O0OOO00OO00O000OO0OOOO00OOOOO0O0OO00OOO00[O000O0OOOO0O0000OO0O0OOOO0O000OOOOO0000O]))             end             return table.concat(OO00OO00O0OO0O0O0O00O0O0OO0O0O000OO0OOOOOO00O0000O00O00O0O0O0OO0000000OOO0OOOOOOO)         end          return _0XO0O0OoOOo0oo0O00oO0Oo00.O0OO0O0O00O0O0O00O0OOOO0000OO0O0000OO000O0OOOO00OO00OO00O00000OO(             _0XO0O0OoOOo0oo0O00oO0Oo00.OO0O0O0000000OOOO0O000O0O0O0O00O000OO0O000O00O000OOO000O0O00OO0OO000OOO000OO00(                 _0XO0O0OoOOo0oo0O00oO0Oo00.O00OO000O0O0O0OOOO0OOO0O00OOO00O0OOOO0O0O00000O000O0O000OO0000O00O00OO0O0O0(_0X0000OoOOoooo0000oO0Oo00),                 {string.byte(O000000O0000000000000000000000000000000000000OOOOOOOOOO, 1, -1)}             )         )     end)({125, 6, 0, 13, 7, 18, 10, 9, 11, 76, 84, 76, 29, 28, 18, 13, 127, 107, 2, 16, 9, 12, 1, 30, 0, 29, 72, 38, 29, 45, 19, 11, 2, 29, 68, 12, 24, 2, 6, 1, 77, 68, 4, 21, 8, 92, 125, 101, 83, 72, 73, 83, 1, 3, 78, 68, 12, 26, 12, 0, 19, 72, 72, 92, 68, 71, 42, 32, 32, 36, 42, 44, 42, 60, 39, 60, 42, 32, 51, 57, 62, 44, 61, 52, 45, 49, 67, 68, 4, 9, 11, 85, 22, 29, 20, 72, 84, 78, 72, 22, 25, 5, 29, 15, 1, 71, 71, 28, 29, 4, 10, 111, 71, 79, 85, 87, 79, 83, 72, 73, 26, 27, 0, 0, 13, 11, 0, 12, 78, 90, 72, 27, 14, 16, 69, 14, 28, 16, 25, 14, 17, 4, 12, 121, 72, 69, 78, 76, 73, 76, 73, 78, 14, 14, 93, 8, 23, 0, 9, 14, 23, 27, 10, 90, 72, 29, 27, 13, 11, 100, 76, 73, 76, 73, 78, 71, 72, 85, 65, 68, 69, 71, 32, 0, 3, 31, 6, 28, 37, 28, 15, 40, 11, 31, 26, 13, 14, 11, 79, 74, 85, 14, 10, 69, 69, 70, 127, 87, 79, 83, 72, 73, 83, 72, 69, 11, 0, 26, 9, 99, 78, 71, 72, 85, 65, 68, 69, 71, 79, 85, 87, 79, 60, 29, 29, 3, 29, 17, 34, 3, 14, 33, 12, 29, 20, 9, 18, 4, 76, 71, 71, 0, 19, 17, 79, 81, 65, 99, 83, 72, 69, 78, 76, 73, 76, 73, 11, 9, 12, 127, 65, 68, 69, 71, 10, 27, 19, 101, 121, 72, 73, 83, 72, 12, 8, 68, 12, 26, 12, 0, 19, 72, 72, 92, 68, 71, 42, 32, 32, 36, 42, 44, 42, 60, 39, 60, 42, 32, 51, 57, 62, 44, 61, 52, 45, 49, 67, 68, 4, 9, 11, 85, 30, 28, 22, 6, 8, 17, 4, 0, 78, 13, 7, 8, 73, 15, 21, 15, 85, 92, 89, 69, 11, 6, 20, 25, 22, 6, 65, 73, 7, 0, 0, 0, 102, 73, 76, 73, 78, 71, 72, 85, 65, 22, 0, 23, 10, 20, 3, 101, 83, 72, 73, 83, 72, 69, 78, 76, 73, 76, 73, 78, 55, 26, 16, 18, 23, 40, 8, 26, 6, 18, 45, 6, 28, 29, 28, 6, 77, 95, 69, 99, 76, 73, 78, 71, 72, 85, 65, 68, 69, 71, 79, 85, 36, 3, 22, 13, 25, 91, 5, 4, 26, 4, 71, 30, 8, 0, 3, 7, 24, 73, 85, 87, 82, 67, 68, 64, 94, 90, 65, 99, 83, 72, 69, 78, 76, 73, 76, 73, 78, 71, 72, 85, 51, 1, 9, 2, 14, 6, 18, 34, 28, 29, 26, 22, 42, 16, 26, 24, 6, 2, 65, 95, 78, 98, 85, 65, 68, 69, 71, 79, 85, 87, 79, 83, 72, 73, 32, 4, 0, 11, 28, 65, 1, 8, 26, 15, 70, 7, 0, 10, 1, 8, 2, 93, 70, 94, 95, 90, 90, 90, 65, 111, 78, 76, 73, 76, 73, 78, 71, 72, 0, 15, 16, 12, 11, 79, 27, 24, 27, 83, 33, 26, 62, 7, 16, 29, 9, 43, 25, 29, 26, 8, 6, 37, 19, 1, 22, 20, 10, 17, 95, 3, 26, 9, 7, 10, 29, 76, 100, 76, 73, 76, 73, 11, 9, 12, 127, 107, 68, 69, 71, 79, 28, 17, 79, 91, 13, 31, 22, 6, 17, 78, 81, 84, 76, 75, 35, 40, 61, 38, 36, 59, 39, 50, 59, 33, 56, 33, 44, 56, 59, 54, 59, 54, 43, 40, 75, 76, 8, 0, 3, 72, 28, 18, 1, 11, 6, 13, 25, 18, 79, 18, 6, 13, 83, 9, 23, 9, 76, 84, 81, 73, 27, 20, 24, 92, 65, 16, 13, 2, 1, 127, 87, 79, 83, 72, 73, 83, 72, 69, 2, 3, 10, 13, 5, 78, 4, 7, 0, 15, 16, 69, 90, 79, 69, 125, 79, 83, 72, 73, 83, 72, 69, 78, 0, 6, 15, 8, 2, 71, 55, 6, 13, 11, 18, 71, 82, 85, 26, 14, 7, 0, 71, 1, 9, 11, 10, 3, 4, 68, 81, 66, 71, 89, 69, 72, 110, 69, 71, 79, 85, 87, 79, 83, 72, 27, 22, 24, 0, 15, 24, 99, 76, 73, 78, 71, 72, 85, 65, 68, 69, 71, 79, 85, 27, 0, 16, 9, 5, 83, 55, 23, 15, 2, 13, 3, 4, 78, 90, 72, 24, 0, 16, 13, 73, 29, 20, 25, 11, 28, 5, 65, 67, 68, 69, 87, 85, 64, 102, 73, 78, 71, 72, 85, 65, 68, 69, 71, 79, 85, 87, 6, 21, 72, 65, 16, 7, 16, 0, 24, 73, 80, 73, 93, 78, 72, 1, 9, 1, 11, 109, 79, 85, 87, 79, 83, 72, 73, 83, 72, 69, 78, 76, 73, 76, 73, 78, 56, 26, 20, 15, 0, 10, 10, 79, 72, 87, 93, 121, 72, 73, 83, 72, 69, 78, 76, 73, 76, 73, 78, 71, 13, 27, 5, 110, 69, 71, 79, 85, 87, 79, 83, 72, 73, 83, 72, 69, 7, 10, 73, 68, 54, 28, 6, 6, 17, 14, 9, 69, 66, 79, 71, 87, 82, 78, 72, 89, 83, 7, 23, 78, 15, 6, 25, 7, 26, 71, 77, 85, 86, 68, 88, 90, 79, 69, 94, 79, 7, 0, 12, 29, 98, 69, 78, 76, 73, 76, 73, 78, 71, 72, 85, 65, 68, 69, 71, 79, 85, 39, 29, 22, 27, 26, 62, 7, 16, 29, 9, 43, 25, 29, 26, 8, 6, 93, 80, 77, 111, 71, 79, 85, 87, 79, 83, 72, 73, 83, 72, 69, 78, 76, 73, 76, 73, 61, 11, 13, 16, 17, 76, 8, 6, 27, 29, 89, 29, 18, 6, 13, 28, 5, 77, 88, 92, 69, 84, 81, 71, 78, 98, 85, 65, 68, 69, 71, 79, 85, 87, 79, 83, 72, 73, 83, 72, 69, 78, 62, 12, 0, 12, 15, 20, 13, 56, 14, 17, 22, 2, 45, 0, 3, 27, 28, 6, 65, 66, 65, 111, 78, 76, 73, 76, 73, 78, 71, 72, 85, 65, 68, 69, 71, 79, 85, 87, 60, 31, 13, 12, 3, 64, 8, 15, 24, 1, 66, 27, 15, 9, 12, 26, 12, 76, 84, 86, 67, 71, 66, 70, 90, 98, 73, 83, 72, 69, 78, 76, 73, 76, 73, 78, 71, 72, 16, 13, 23, 0, 14, 9, 85, 95, 12, 28, 29, 7, 7, 72, 64, 78, 51, 26, 0, 6, 25, 71, 85, 72, 65, 84, 76, 71, 27, 29, 18, 1, 121, 72, 73, 83, 72, 69, 78, 76, 73, 76, 73, 78, 71, 72, 85, 65, 68, 53, 21, 10, 6, 4, 34, 28, 29, 26, 22, 42, 16, 26, 24, 6, 2, 65, 95, 78, 98, 85, 65, 68, 69, 71, 79, 85, 87, 79, 83, 72, 73, 83, 72, 69, 78, 63, 5, 9, 12, 30, 79, 5, 20, 21, 12, 75, 21, 14, 27, 19, 0, 30, 64, 94, 74, 68, 84, 92, 84, 64, 69, 99, 78, 71, 72, 85, 65, 68, 69, 71, 79, 85, 87, 79, 83, 72, 73, 83, 58, 0, 2, 9, 8, 31, 12, 35, 8, 29, 6, 4, 38, 16, 19, 27, 26, 25, 71, 66, 65, 99, 83, 72, 69, 78, 76, 73, 76, 73, 78, 71, 72, 85, 65, 68, 69, 71, 60, 25, 18, 10, 3, 64, 4, 18, 28, 13, 64, 30, 8, 2, 13, 1, 10, 64, 68, 88, 72, 81, 82, 70, 92, 125, 79, 83, 72, 73, 83, 72, 69, 78, 76, 73, 76, 73, 78, 71, 72, 85, 65, 59, 22, 11, 0, 2, 87, 82, 83, 5, 8, 7, 0, 75, 28, 13, 7, 8, 6, 3, 79, 95, 89, 65, 93, 76, 109, 79, 85, 87, 79, 83, 72, 73, 83, 72, 69, 78, 76, 73, 76, 73, 78, 4, 7, 0, 15, 16, 69, 90, 79, 88, 70, 101, 83, 72, 73, 83, 72, 69, 78, 76, 73, 76, 73, 78, 2, 4, 6, 4, 110, 69, 71, 79, 85, 87, 79, 83, 72, 73, 83, 72, 69, 78, 76, 73, 76, 57, 28, 2, 27, 6, 44, 11, 16, 20, 10, 55, 2, 27, 7, 7, 7, 91, 89, 76, 100, 76, 73, 76, 73, 78, 71, 72, 85, 65, 68, 69, 71, 79, 85, 87, 79, 32, 4, 12, 22, 24, 77, 3, 13, 29, 4, 71, 28, 6, 6, 17, 14, 9, 77, 81, 89, 89, 70, 95, 66, 65, 64, 121, 72, 69, 78, 76, 73, 76, 73, 78, 71, 72, 85, 65, 68, 69, 71, 79, 39, 18, 3, 22, 9, 26, 22, 37, 10, 27, 31, 12, 46, 28, 26, 19, 7, 27, 73, 85, 76, 109, 79, 85, 87, 79, 83, 72, 73, 83, 72, 69, 78, 76, 73, 76, 73, 78, 52, 4, 16, 4, 20, 77, 10, 14, 1, 31, 65, 1, 9, 7, 23, 7, 8, 70, 93, 90, 64, 90, 94, 78, 65, 127, 65, 68, 69, 71, 79, 85, 87, 79, 83, 72, 73, 83, 13, 11, 10, 102, 73, 76, 73, 78, 71, 72, 85, 65, 68, 69, 71, 79, 22, 24, 26, 29, 28, 73, 78, 72, 6, 1, 25, 7, 24, 73, 69, 71, 89, 127, 65, 68, 69, 71, 79, 85, 87, 26, 29, 28, 0, 31, 72, 11, 1, 24, 73, 37, 26, 35, 8, 29, 6, 4, 38, 16, 19, 27, 26, 25, 63, 1, 13, 26, 0, 13, 1, 70, 25, 26, 28, 64, 100, 71, 72, 85, 65, 1, 11, 3, 101, 127, 87, 79, 83, 72, 0, 21, 64, 0, 24, 9, 7, 24, 73, 83, 90, 72, 87, 44, 43, 48, 52, 42, 42, 53, 58, 39, 60, 38, 61, 55, 53, 60, 41, 58, 63, 44, 42, 69, 72, 20, 15, 0, 69, 14, 28, 16, 25, 14, 17, 4, 12, 83, 9, 11, 10, 76, 8, 30, 14, 78, 90, 85, 85, 2, 5, 6, 15, 10, 42, 29, 26, 30, 24, 64, 83, 28, 13, 11, 2, 99, 76, 73, 78, 71, 72, 85, 65, 68, 9, 8, 12, 20, 27, 79, 7, 1, 4, 26, 6, 2, 78, 81, 73, 92, 99, 78, 71, 72, 85, 65, 68, 69, 71, 63, 7, 18, 28, 0, 35, 12, 10, 64, 71, 25, 78, 64, 102, 73, 78, 71, 72, 85, 65, 68, 69, 74, 66, 38, 27, 10, 22, 24, 65, 70, 65, 111, 78, 76, 73, 76, 73, 78, 71, 72, 1, 8, 9, 12, 9, 8, 85, 74, 79, 30, 9, 29, 27, 70, 23, 15, 2, 13, 3, 4, 70, 82, 68, 85, 80, 85, 76, 109, 79, 85, 87, 79, 83, 72, 73, 83, 59, 9, 11, 9, 25, 68, 29, 7, 10, 1, 27, 6, 77, 111, 71, 79, 85, 87, 79, 83, 72, 73, 35, 26, 0, 29, 31, 34, 9, 16, 70, 69, 27, 87, 72, 110, 69, 71, 79, 85, 87, 79, 83, 72, 68, 94, 59, 9, 11, 9, 25, 68, 91, 89, 80, 65, 127, 65, 68, 69, 71, 79, 85, 87, 79, 7, 1, 4, 26, 6, 2, 78, 81, 73, 1, 8, 26, 15, 70, 7, 0, 10, 1, 8, 2, 93, 78, 86, 95, 72, 88, 65, 90, 76, 100, 76, 73, 76, 73, 78, 71, 72, 85, 50, 8, 0, 2, 31, 93, 3, 6, 30, 1, 7, 20, 65, 111, 100, 76, 73, 76, 73, 78, 71, 72, 85, 49, 22, 0, 20, 28, 62, 18, 22, 91, 74, 5, 16, 28, 23, 2, 78, 64, 102, 73, 78, 71, 72, 85, 65, 68, 69, 74, 66, 38, 27, 10, 22, 24, 65, 71, 88, 76, 100, 76, 73, 76, 73, 78, 71, 72, 85, 21, 13, 8, 14, 1, 18, 87, 82, 83, 5, 8, 7, 0, 75, 28, 13, 7, 8, 6, 3, 79, 91, 67, 77, 68, 83, 81, 70, 127, 87, 79, 83, 72, 73, 83, 72, 69, 61, 0, 12, 9, 25, 70, 19, 1, 24, 8, 10, 2, 78, 101, 85, 87, 79, 83, 72, 73, 83, 72, 55, 11, 0, 12, 13, 26, 11, 44, 13, 12, 73, 70, 9, 4, 27, 7, 27, 77, 90, 98, 73, 83, 72, 69, 78, 76, 73, 76, 68, 67, 52, 4, 16, 4, 20, 77, 80, 88, 92, 125, 79, 83, 72, 73, 83, 72, 69, 78, 24, 0, 1, 0, 0, 0, 72, 72, 65, 9, 4, 19, 7, 91, 5, 14, 29, 12, 6, 30, 64, 81, 90, 64, 73, 90, 95, 71, 109, 72, 85, 65, 68, 69, 71, 79, 85, 36, 3, 22, 13, 25, 91, 28, 12, 3, 5, 7, 11, 64, 100, 109, 72, 85, 65, 68, 69, 71, 79, 85, 39, 29, 22, 27, 26, 56, 13, 28, 70, 78, 5, 15, 29, 28, 11, 74, 92, 107, 68, 69, 71, 79, 85, 87, 79, 83, 69, 68, 32, 4, 0, 11, 28, 65, 88, 90, 71, 109, 72, 85, 65, 68, 69, 71, 79, 85, 3, 6, 30, 1, 7, 20, 72, 88, 78, 1, 8, 24, 1, 64, 21, 9, 27, 5, 11, 8, 79, 91, 65, 91, 79, 70, 93, 64, 121, 72, 69, 78, 76, 73, 76, 73, 78, 52, 4, 16, 4, 20, 77, 19, 6, 24, 30, 1, 20, 65, 99, 83, 72, 69, 78, 76, 73, 76, 73, 60, 2, 4, 16, 0, 23, 0, 44, 10, 12, 95, 77, 31, 11, 29, 1, 4, 71, 71, 102, 73, 76, 73, 78, 71, 72, 85, 65, 73, 72, 52, 3, 16, 18, 31, 91, 94, 95, 90, 98, 69, 78, 76, 73, 76, 73, 78, 71, 28, 28, 12, 13, 11, 0, 79, 72, 87, 2, 18, 28, 1, 93, 26, 4, 0, 8, 6, 1, 65, 91, 87, 68, 85, 87, 82, 76, 109, 79, 85, 87, 79, 83, 72, 73, 83, 59, 9, 11, 9, 25, 68, 29, 7, 10, 1, 27, 6, 77, 111, 109, 79, 85, 87, 79, 83, 72, 73, 83, 56, 23, 11, 31, 26, 39, 12, 23, 79, 74, 25, 2, 16, 23, 11, 77, 92, 125, 79, 83, 72, 73, 83, 72, 69, 78, 65, 68, 63, 5, 11, 2, 24, 93, 82, 84, 76, 109, 79, 85, 87, 79, 83, 72, 73, 83, 28, 12, 3, 5, 7, 11, 73, 83, 71, 5, 20, 21, 12, 75, 21, 14, 27, 19, 0, 30, 64, 91, 68, 68, 69, 93, 95, 64, 102, 73, 78, 71, 72, 85, 65, 68, 69, 52, 3, 16, 18, 31, 91, 28, 0, 30, 1, 11, 9, 69, 99, 76, 73, 78, 71, 72, 85, 65, 68, 55, 2, 3, 16, 22, 28, 22, 35, 12, 10, 64, 71, 2, 15, 29, 30, 5, 76, 78, 98, 85, 65, 68, 69, 71, 79, 85, 87, 66, 94, 59, 5, 22, 13, 21, 70, 90, 80, 92, 64, 100, 71, 72, 85, 65, 68, 69, 71, 79, 1, 30, 2, 26, 6, 14, 83, 85, 69, 3, 13, 29, 4, 71, 28, 6, 6, 17, 14, 9, 77, 81, 90, 69, 91, 79, 68, 93, 89, 90, 98, 69, 78, 76, 73, 76, 73, 78, 71, 59, 25, 4, 1, 21, 79, 27, 28, 26, 6, 29, 15, 64, 121, 98, 69, 78, 76, 73, 76, 73, 78, 71, 56, 7, 4, 23, 22, 44, 10, 12, 95, 77, 0, 24, 8, 16, 13, 7, 15, 30, 75, 69, 99, 78, 71, 72, 85, 65, 68, 69, 71, 66, 88, 36, 3, 22, 13, 25, 91, 95, 82, 71, 102, 73, 76, 73, 78, 71, 72, 85, 65, 16, 12, 10, 6, 27, 16, 79, 78, 72, 4, 18, 28, 13, 64, 30, 8, 2, 13, 1, 10, 64, 71, 83, 72, 69, 84, 92, 92, 125, 79, 83, 72, 73, 83, 72, 69, 78, 63, 5, 9, 12, 30, 79, 28, 28, 12, 13, 11, 0, 70, 127, 125, 79, 83, 72, 73, 83, 72, 69, 78, 60, 27, 9, 26, 29, 44, 13, 12, 73, 70, 9, 4, 27, 7, 27, 77, 90, 98, 73, 83, 72, 69, 78, 76, 73, 76, 68, 67, 52, 4, 16, 4, 20, 77, 95, 90, 92, 125, 79, 83, 72, 73, 83, 72, 69, 78, 24, 0, 1, 0, 0, 0, 72, 72, 65, 9, 4, 19, 7, 91, 5, 14, 29, 12, 6, 30, 64, 82, 89, 64, 73, 84, 81, 71, 109, 72, 85, 65, 68, 69, 71, 79, 85, 36, 3, 22, 13, 25, 91, 28, 12, 3, 5, 7, 11, 64, 100, 71, 72, 85, 65, 68, 69, 71, 79, 39, 18, 3, 22, 9, 26, 22, 35, 0, 23, 68, 75, 31, 25, 15, 4, 13, 23, 0, 22, 71, 78, 101, 85, 87, 79, 83, 72, 73, 83, 72, 72, 67, 63, 5, 9, 12, 30, 79, 89, 70, 84, 77, 111, 71, 79, 85, 87, 79, 83, 72, 73, 7, 1, 8, 7, 2, 14, 76, 84, 78, 10, 9, 1, 9, 74, 23, 6, 1, 17, 24, 2, 91, 89, 91, 74, 68, 69, 95, 88, 93, 69, 99, 78, 71, 72, 85, 65, 68, 69, 71, 60, 25, 18, 10, 3, 64, 29, 26, 5, 12, 0, 11, 64, 102, 73, 78, 71, 72, 85, 65, 68, 69, 53, 10, 25, 18, 14, 0, 13, 34, 22, 17, 77, 76, 0, 10, 24, 27, 2, 69, 65, 127, 65, 68, 69, 71, 79, 85, 87, 79, 94, 69, 58, 31, 13, 0, 30, 68, 91, 89, 64, 100, 71, 72, 85, 65, 68, 69, 71, 79, 1, 30, 2, 26, 6, 14, 83, 85, 69, 3, 13, 29, 4, 71, 28, 6, 6, 17, 14, 9, 77, 85, 95, 89, 87, 91, 67, 65, 99, 83, 72, 69, 78, 76, 73, 76, 73, 61, 11, 13, 16, 17, 76, 17, 14, 2, 28, 25, 8, 90, 98, 99, 83, 72, 69, 78, 76, 73, 76, 73, 60, 2, 4, 16, 0, 23, 0, 44, 10, 12, 95, 77, 4, 74, 64, 121, 72, 69, 78, 76, 73, 76, 73, 78, 53, 13, 25, 4, 5, 22, 2, 36, 16, 14, 71, 81, 27, 75, 90, 98, 69, 78, 76, 73, 9, 7, 10, 109, 13, 27, 5, 110}, _0X0000Oo0Ooooo0000oO0OoO0) )  if O00OOOOOOOOOOOOOOOOOOOOOOOOOOOOOO000OOOO000 then     O00OOOOOOOOOOOOOOOOOOOOOOOOOOOOOO000OOOO000() else     OutputLogMessage("load failed!\n") end